#!/usr/bin/env sh
# unexpand(1) wrapper script

usage() {
	echo "usage: $0 [-t tab_stop] [file ...]" 1>&$1
	echo "Unexpand spaces to tabs assuming tab stops every tab_stop (default 4) columns." 1>&$1
	echo "If files are specified, unexpands tabs in them; otherwise reads from stdin and" 1>&$1
	echo "writes to stdout." 1>&$1
	exit $(($1 - 1))
}

tabw=4
while getopts ht: name; do
	case $name in
	t) tabw=$OPTARG;;
	h) usage 1;;
	?) usage 2;;
	esac
done
shift $(($OPTIND - 1))

# all unexpand(1) implementations except OpenBSD's support -t
targ="-t$tabw"
if [ "$(uname)" = "OpenBSD" ]; then
	if [ $tabw -ne 8 ]; then
		echo "$0: OpenBSD unexpand lacks -t option, must use -t8" 1>&2
		exit 1
	fi
	targ=""
fi

if [ $# -eq 0 ]; then
	unexpand $targ
	exit $?
fi

# create a temporary file which is deleted on exit
tmpf=$(mktemp)
trap 'rm -f -- "$tmpf"' EXIT

for f in "$@"; do
	unexpand $targ <"$f" >"$tmpf"
	cat "$tmpf" >"$f"
done
