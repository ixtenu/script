#!/usr/bin/env sh
# fmt(1) wrapper script for bulleted lists denoted by '-'
#
# Supports bulleted lists which look like this (without the "# " for the shell
# comment):
#
# - paragraph one is one line
# - paragraph two
#   is two lines
# - paragraph three is
#   three lines (note the continuation lines
#   are indented by two spaces to line up)
#
# Works with nested lists (indented lists within lists).  Bullet points may
# optionally be separated by a newline character, but this is not required.

usage() {
	echo "usage: $0 [-w width]" 1>&$1
	echo "Wrap bulleted lists at given column width (default 80)." 1>&$1
	exit $(($1 - 1))
}

width=80
while getopts hw: name; do
	case $name in
	w) width=$OPTARG;;
	h) usage 1;;
	?) usage 2;;
	esac
done
shift $(($OPTIND - 1))

if [ $# -ne 0 ]; then
	echo "$0: unexpected arguments: $@" 1>&2
	usage 2
fi

# plan9port's sed(1) and awk(1) aren't compatible with this script, so don't
# use them even if $PLAN9/bin is at the front of the path
sed=$(no9 which sed)
awk=$(no9 which awk)

# newline for use in sed pattern
nl='
'

# Step 1: Replace the "- " by "\n  ".  The newline is so fmt(1) will treat
# the bullet points as separate paragraphs, even if there is no blank line
# between them in the original.  The two spaces are so that the text lines
# up correctly.
#
# Step 2: Pipe the paragraphs through fmt(1).
#
# Step 3: Use awk(1) to delete the inserted newlines and change the "  "
# back to "- ".
$sed "s/^\([ 	]*\)- /\\${nl}\1  /" | \
fmtw -w$width | \
$awk '
/^$/ {
	if (prev_blank) {
		print ""
	}
	prev_blank = 1;
	next
}
/^	*   *[^ ]/ {
	if (prev_blank) {
		prev_blank = 0
		i = match($0, /  [^ ]/)
		if (i > 0) {
			$0 = substr($0, 1, i-1) "-" substr($0, i+1)
		}
	}
	print
	next
}
{
	if (prev_blank) {
		prev_blank = 0
		print ""
	}
	print
}
'
